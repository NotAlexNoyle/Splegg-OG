plugins {

	id "java" // Tell Gradle that this is a Java project.
	id "com.github.johnrengelman.shadow" version "7.1.2" // Import Shadow utility to package all libraries into the plugin's .jar file.

}

group = "net.trueog.splegg-og" // Declare bundle identifier.
version = "1.4" // Declare version number.

def apiVersion = "1.18.2" // Declare minecraft server target version.
def targetJavaVersion = 17 // Declare java compatibility minimum.

apply plugin: "eclipse" // Enable integration with Eclipse IDE for development.

processResources {

	def props = [
		version: version,
		apiVersion: apiVersion,
	]

	inputs.properties props // Indicates to rerun if version changes.

	filesMatching("plugin.yml") { // Pass build number and API version to plugin's YAML file.

		expand props // Automatically update .jar's internal version numbers.

	}

}

repositories {

	mavenCentral() // Get built-in Maven Central Repository for managing Maven Repositories in Gradle..

	maven { // Import Maven Repository.

		url "https://repo.purpurmc.org/snapshots" // Get Purpur API from Purpur Maven Repository.

	}

	maven { // Import Maven Repository.

		url "https://jitpack.io" // Get Vault API from Jitpack Repository.

	}

	maven { // Import Paper Repository (EssentialsX API Dependency)

		name "papermc"
		url "https://papermc.io/repo/repository/maven-public/"

	}

	maven { // Import Maven Repository.

		name "essentialsx-releases"
		url "https://repo.essentialsx.net/releases/" // Get EssentialsX API from EssentialsX repository.

	}

	maven { // Import Maven Repository.

		url "https://maven.enginehub.org/repo" // Get WorldEdit API from EngineHub Repository.

	}

}

dependencies {

	compileOnly "org.purpurmc.purpur:purpur-api:1.18.2-R0.1-SNAPSHOT" // Declare the Purpur API version to be packaged.

	compileOnly "com.github.MilkBowl:VaultAPI:1.7" // Declare the Vault API version to be packaged.

	compileOnly "net.essentialsx:EssentialsX:2.19.4" // Declare the EssentialsX API version to be packaged.

	compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.3.0-SNAPSHOT" // Declare the WorldEdit API version to be packaged.

}

shadowJar {

	minimize() // Pack dependencies into .jar file.

}

jar.dependsOn shadowJar // Runs shadowJar.

tasks.jar.configure {

	classifier = "part"

}

tasks.shadowJar.configure {

	classifier = null

}

compileJava { // Build Java code.

	options.compilerArgs += ["-parameters"] // Pass any parameters specified while executing Gradle wrapper as Java compiler arguments.
	options.encoding = 'UTF-8' // Build with UTF-8 encoding always, even on systems without it.
	options.fork = true
	options.forkOptions.executable = 'javac' // Define Java compiler executable.

}